from fabric import Connection
import time
import os
import webbrowser
from dotenv import load_dotenv


# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
load_dotenv('.env')  

PC_HOST = os.getenv("PC_HOST")
PC_USER = os.getenv("PC_USER")
VENV_PATH = os.getenv("VENV_PATH")
TMUX_SESSION_NAME = os.getenv("TMUX_SESSION_NAME")      
PORT = os.getenv("PORT")


def capture_token(c):
    cmd = "tmux capture-pane -p -t jupyter_session_base | grep -Eo 'http://(127.0.0.1|localhost):[0-9]+/\\S+'"
    return c.run(cmd, hide=True, warn=True)


def fake_restart(c, exit=False):
    c.run(f"tmux send-keys -t {TMUX_SESSION_NAME} C-c", hide=True, warn=True)
    cmd = 'y' if exit else 'n'
    c.run(f"tmux send-keys -t {TMUX_SESSION_NAME} {cmd} Enter", hide=True, warn=True)
  

def get_jupyter_url(c):
    """–ü–æ–ª—É—á–∞–µ—Ç URL –∑–∞–ø—É—â–µ–Ω–Ω–æ–≥–æ Jupyter Lab –∏–∑ tmux"""
    result_check = c.run(f"tmux list-sessions | grep {TMUX_SESSION_NAME}", hide=True, warn=True)
    
    if result_check.failed:
        print("‚ö†Ô∏è Jupyter tmux session not found!")
        return None
      
    for i in range(2):
        result = capture_token(c)
        if not result.failed or result.stdout.strip():
            return result.stdout.strip()
        else: 
            print(f"‚ö†Ô∏è No Jupyter URL found in tmux session no={i+1}!"	
            print("Try simulate restart!")
            fake_restart(c) 
    
    return None

def start_jupyter(c):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç Jupyter Lab –≤ –Ω–æ–≤–æ–π tmux-—Å–µ—Å—Å–∏–∏"""
    print("üîÑ –ó–∞–ø—É—Å–∫–∞—é Jupyter Lab...")
    c.run(f"tmux new-session -d -s {TMUX_SESSION_NAME} 'source {VENV_PATH} && jupyter lab --no-browser --port {PORT}'")
    time.sleep(3)  
    # –ñ–¥—ë–º, —á—Ç–æ–±—ã —Å–µ—Ä–≤–µ—Ä —É—Å–ø–µ–ª —Å—Ç–∞—Ä—Ç–∞–Ω—É—Ç—å
    return get_jupyter_url(c)

def connect_or_start_jupyter():
    """–ü–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ Jupyter Lab, –µ—Å–ª–∏ –æ–Ω –∑–∞–ø—É—â–µ–Ω, –∏–Ω–∞—á–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç –µ–≥–æ"""
    with Connection(host=PC_HOST, user=PC_USER) as c:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω–∞ –ª–∏ tmux-—Å–µ—Å—Å–∏—è
        result = c.run(f"tmux has-session -t {TMUX_SESSION_NAME}", warn=True)
        if result.ok:
            print("‚úÖ Jupyter Lab —É–∂–µ –∑–∞–ø—É—â–µ–Ω. –ü–æ–¥–∫–ª—é—á–∞—é—Å—å...")
            jupyter_url = get_jupyter_url(c)
        else:
            jupyter_url = start_jupyter(c)
    
    if jupyter_url:
        print(f"üîú –û—Ç–∫—Ä—ã–≤–∞—é {jupyter_url}")
        webbrowser.open(jupyter_url)
    else:
        print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å URL Jupyter Lab!")
        print(jupyter_url)


if __name__ == "__main__":
    connect_or_start_jupyter()
